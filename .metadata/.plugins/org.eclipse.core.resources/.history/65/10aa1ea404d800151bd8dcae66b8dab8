/*
 * virtual_functions.cpp
 *
 *  Created on: Feb 21, 2016
 *      Author: Budi Ryan
 */



#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


static int prof_id = 0;
static int stud_id = 0;
class Person{
private:
	string name;
	int age;
public:
	virtual void getdata() = 0;
	virtual void putdata() = 0;
	void putname(string s){
		this->name = s;
	}
	void putage(int age){
		this->age = age;
	}
	string printname(){
		return this->name;
	}
	int printage(){
		return this->age;
	}
};

class Professor: public Person{
private:
	int publications;
public:
	Professor(void){
		prof_id++;
		cout<<"Debug: "<<prof_id<<endl;
	}
	void getdata(){
		string dummyname;
		cin>>dummyname;
		putname(dummyname);
		int dummyage;
		cin>>dummyage;
		putage(dummyage);
		cin>>this->publications;
	}
	void putdata(){
		cout<<printname()<<" "<<printage()<<" "<<publications<<" ";
		cout<<prof_id<<endl;
	}
};
class Student: public Person{
private:
	int marks[6];
public:
	Student(void){
		stud_id++;
	}
	void getdata(){
		string dummyname;
		cin>>dummyname;
		putname(dummyname);
		int dummyage;
		cin>>dummyage;
		putage(dummyage);
		for(int i = 0; i < 6 ;i++)cin>>marks[i];
	}
	void putdata(){
		int totalmarks = 0;
		for(int i = 0; i <6 ;i++)totalmarks+=marks[i];
		cout<<printname()<<" "<<printage()<<" "<<totalmarks<<" ";
		cout<<stud_id<<endl;
	}
};






int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
